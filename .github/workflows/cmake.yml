name: CMake

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config: 
          - os: ubuntu-24.04
            cc: gcc
            cxx: g++
          - os: ubuntu-22.04
            cc: gcc
            cxx: g++
          - os: macos-26
            cc: clang
            cxx: clang++
          - os: macos-15
            cc: clang
            cxx: clang++
          - os: macos-14
            cc: clang
            cxx: clang++
          - os: macos-13
            cc: clang
            cxx: clang++
        boost:
          - url: system
            system_packages_ubuntu: libboost-all-dev
            system_packages_macos: boost
            extra_cmake_args: 
          - url: BOOST_189
            system_packages_ubuntu: 
            system_packages_macos: 
            extra_cmake_args: 
          - url: BOOST_187
            system_packages_ubuntu: 
            system_packages_macos:  
            extra_cmake_args: 
          - url: BOOST_184
            system_packages_ubuntu: 
            system_packages_macos: 
            extra_cmake_args: 
          - url: BOOST_176
            system_packages_ubuntu: 
            system_packages_macos: 
            extra_cmake_args: 
          - url: BOOST_174
            system_packages_ubuntu: 
            system_packages_macos: 
            extra_cmake_args: 
          - url: BOOST_170
            system_packages_ubuntu: 
            system_packages_macos: 
            extra_cmake_args: 
          - url: BOOST_168
            system_packages_ubuntu: 
            system_packages_macos: 
            extra_cmake_args: -DUSE_CMP0167_NEW=OFF
        zmq: 
          - tag: system
            system_packages_ubuntu: libzmq3-dev
            system_packages_macos: zmq

    runs-on: ${{ matrix.config.os }}

    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
      CTEST_OUTPUT_ON_FAILURE: 1
      PACKAGES_UBUNTU: ${{ matrix.boost.system_packages_ubuntu }} ${{ matrix.zmq.system_packages_ubuntu }}
      PACKAGES_MACOS: ${{ matrix.boost.system_packages_macos }} ${{ matrix.zmq.system_packages_macos }}
      CONFIG_OS: ${{ matrix.config.os }}
      MATRIX: ${{ toJson(matrix) }}

    steps:
      - name: Install clang++ wrapper
        if: ${{ startsWith(matrix.config.os, 'ubuntu') && (endsWith(matrix.boost.url, 'BOOST_168') || endsWith(matrix.boost.url, 'BOOST_176')) }}
        run: |
          sudo tee /usr/local/bin/clang++-wrapper > /dev/null << 'EOF'
          #!/usr/bin/env bash
          REAL_CLANG=$(which clang++)
          ARGS=()
          for arg in "$@"; do
              if [[ "$arg" != "-fcoalesce-templates" ]]; then
                  ARGS+=("$arg")
              fi
          done
          exec "$REAL_CLANG" "${ARGS[@]}"
          EOF
          sudo chmod +x /usr/local/bin/clang++-wrapper

          # Override clang++ globally for this workflow
          sudo ln -sf /usr/local/bin/clang++-wrapper /usr/local/bin/clang++
          clang++ --version  # verify
      - uses: actions/checkout@v3
      - name: buildtools on ubuntu
        if: ${{ startsWith(matrix.config.os, 'ubuntu') }}
        shell: bash
        run: |
          PACKAGES_UBUNTU=$(echo $PACKAGES_UBUNTU | sed 's/^[   ]*//;s/[    ]*$//')
          if [ -n "$PACKAGES_UBUNTU" ]; then
            sudo apt-get update && sudo apt-get install -y $PACKAGES_UBUNTU
          fi
      - name: buildtools on macos
        if: ${{ startsWith(matrix.config.os, 'macos') }}
        shell: bash
        run: |
          PACKAGES_MACOS=$(echo $PACKAGES_MACOS | sed 's/^[   ]*//;s/[    ]*$//')
          if [ -n "$PACKAGES_MACOS" ]; then
            brew install $PACKAGES_MACOS
          fi
      - name: build
        shell: bash
        run: |
          cmake  -DBOOST_URL=${{matrix.boost.url}} -DZMQ_TAG=${{matrix.zmq.tag}} ${{matrix.boost.extra_cmake_args}} -S .github/workflows/cmake-superbuild  -B build
          cmake --build build
